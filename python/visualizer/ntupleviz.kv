#:import np numpy
#:import os os
#:import plt matplotlib.pyplot
<ConfigLabel@Label>
    size_hint_x: .8
<ConfigSwitch@Switch>
    size_hint: .8, .3
    active: True
<ConfigSlider@Slider>
    size_hint: .2, .3
    orientation: 'vertical'

<Viewer@Image>:
    BoxLayout:
        pos: root.pos
        size: root.size[0], .1*root.size[1]
        padding: 10

#<LabeledImage@Image>:
#    BoxLayout:
#        id: layout
#        pos: root.pos
#        size: root.size[0], .1*root.size[1]
#        padding: 10
#        Button:
#            text: 'Flip x'
#            on_release: root.flip_x()
#        Button:
#            text: 'Flip y'
#            on_release: root.flip_y()
#        Button:
#            text: 'Screenshot'
#            on_release: root.screenshot(root.parent.load_path)

<LoadDialog>:
    BoxLayout:
        size: root.size
        pos: root.pos
        orientation: "vertical"

        FileChooserListView:
            id: filechooser
            path: "~" #root.load_path
        Label:
            text: filechooser.path
        BoxLayout:
            size_hint_y: None
            height: 30
            Button:
                text: "Cancel"
                on_release: root.cancel()
            Button:
                text: "Load"
                on_release: root.load(filechooser.path, filechooser.selection)

<WarningPopup>
    title: "WARNING"
    size_hint: .5, .5
    BoxLayout:
        orientation: 'vertical'
        Label:
            text: root.label_text
        Button:
            text: "OK"
            size_hint: .5, .2
            pos_hint: {'center_x': .5, 'center_y': .5}
            on_press: root.dismiss()

<TextInputPopup>
    title: root.label_text
    size_hint: .5, .5
    text: text_input.text
    auto_dismiss: False
    BoxLayout:
        orientation: 'vertical'
        Label:
            text: root.label_text
        TextInput:
            id: text_input
            size_hint_y: None
            height: 30
            multiline: False
        Button:
            text: "OK"
            on_press: root.dismiss()

<RootWidget>
    orientation:'horizontal'
    data_controller: data_controller
    GridLayout:
        cols: 2
        id: config
        size_hint: .1, 1
        padding: 10
        canvas:
            Color:
                rgb: 1., 0., 0.
            Rectangle:
                pos: self.x + self.width, self.y
                size: 1, self.height
        ConfigLabel:
            text: 'Speed:\n1/{}x'.format(speed_slider.value)
        ConfigSlider:
            id: speed_slider
            min: 1
            max: 16
            step: 1
        ConfigLabel:
            text: 'Temp. window:\n{0:d}ms'.format(int(tw_slider.value*1000))
        ConfigSlider:
            id: tw_slider
            step: 0.001
            min: 0.001
            max: 0.5
            value: 0.03
        Button:
            id: play_button
            text: 'PLAY/PAUSE'
            on_press: time_slider.play_pause()
        Button:
            id: stop_button
            text: 'STOP'
            on_press: time_slider.stop()
        Button:
            id: play_button
            text: '< SLIDE'
            on_press: time_slider.play_backward()
            on_release: time_slider.pause()
        Button:
            id: play_button
            text: 'SLIDE >'
            on_press: time_slider.play_forward()
            on_release: time_slider.pause()
        Button:
            id: play_button
            text: '< STEP'
            on_press: time_slider.step_backward()
        Button:
            id: play_button
            text: 'STEP >'
            on_press: time_slider.step_forward()
        Button:
            text: 'Load'
            on_release: data_controller.show_load()

    BoxLayout:
        orientation: 'vertical'
        size_hint: .9, 1
        padding: 10
        DataController:
            id: data_controller
            size_hint: 1, .9
            orientation: 'horizontal'
            file_path_and_name: ''
            time_value: time_slider.value
            on_time_value: self.update_children()
            time_window: tw_slider.value
        TimeSlider:
            id: time_slider
            size_hint: 1, .03
            step: 0.001
            speed: speed_slider.value
            min: 0.0
            max: data_controller.ending_time
            on_max: value = 0
            time_window: tw_slider.value
        Label:
            size_hint: 1, .03
            text: '{0:.3f}/{1:.3f} sec'.format(time_slider.value, time_slider.max)
        Label:
            size_hint: 1, .03
            text: data_controller.file_path_and_name
